import java.util.HashMap;
import java.util.Map;

public enum AmountFields {
    FIELD1("field1", "field1Signage"),
    FIELD2("field2", "field2Signage"),
    FIELD3("field3", "field3Signage");

    private static final Map<String, AmountFields> fieldMap = new HashMap<>();

    static {
        for (AmountFields field : values()) {
            fieldMap.put(field.getFieldName(), field);
        }
    }

    private final String fieldName;
    private final String signageFieldName;

    AmountFields(String fieldName, String signageFieldName) {
        this.fieldName = fieldName;
        this.signageFieldName = signageFieldName;
    }

    public String getFieldName() {
        return fieldName;
    }

    public String getSignageFieldName() {
        return signageFieldName;
    }

    /**
     * Matches a given field name, allowing for prefixes with an underscore.
     * Extracts the portion after the last underscore and matches with the enum's field names.
     *
     * @param fieldName The field name to match.
     * @return The corresponding AmountFields enum or null if no match is found.
     */
    public static AmountFields match(String fieldName) {
        if (fieldName == null || fieldName.isEmpty()) {
            return null;
        }

        // Extract the portion after the last underscore
        String actualFieldName = fieldName.contains("_") 
                ? fieldName.substring(fieldName.lastIndexOf("_") + 1) 
                : fieldName;

        // Match with the enum's field names
        return fieldMap.get(actualFieldName);
    }
}
