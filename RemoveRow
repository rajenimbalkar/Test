import java.util.*;
import java.util.stream.Collectors;

public class FlattenMapList {

    public static void main(String[] args) {
        // Sample Map with List of Maps as values
        Map<String, List<Map<String, Object>>> mapOfLists = new HashMap<>();

        // Sample data
        List<Map<String, Object>> list1 = Arrays.asList(
                createMap("accountNumber", "A123", "sequenceNumber", 1),
                createMap("accountNumber", "A124", "sequenceNumber", 2)
        );

        List<Map<String, Object>> list2 = Arrays.asList(
                createMap("accountNumber", "B123", "sequenceNumber", 1),
                createMap("accountNumber", "B124", "sequenceNumber", 2)
        );

        mapOfLists.put("key1", list1);
        mapOfLists.put("key2", list2);

        // Step 1: Flatten the map into a single list of maps using streams
        List<Map<String, Object>> flattenedList = mapOfLists.values().stream()
                .flatMap(Collection::stream)  // Flatten each list of maps into a single stream
                .collect(Collectors.toList());  // Collect them into a single list

        // Step 2: Print the flattened list
        System.out.println("Flattened List:");
        flattenedList.forEach(map -> System.out.println(map));
    }

    // Helper method to create a map with accountNumber and sequenceNumber
    private static Map<String, Object> createMap(String key1, Object value1, String key2, Object value2) {
        Map<String, Object> map = new HashMap<>();
        map.put(key1, value1);
        map.put(key2, value2);
        return map;
    }
}
