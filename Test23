import org.apache.spark.util.AccumulatorV2;
import java.util.HashMap;
import java.util.Map;

public class ErrorAccumulator extends AccumulatorV2<Map<String, String>, Map<String, String>> {
    private Map<String, String> errorMap = new HashMap<>();

    @Override
    public boolean isZero() {
        return errorMap.isEmpty();
    }

    @Override
    public AccumulatorV2<Map<String, String>, Map<String, String>> copy() {
        ErrorAccumulator newAcc = new ErrorAccumulator();
        newAcc.errorMap.putAll(this.errorMap);
        return newAcc;
    }

    @Override
    public void reset() {
        errorMap.clear();
    }

    @Override
    public void add(Map<String, String> newErrors) {
        errorMap.putAll(newErrors);
    }

    @Override
    public void merge(AccumulatorV2<Map<String, String>, Map<String, String>> other) {
        errorMap.putAll(other.value());
    }

    @Override
    public Map<String, String> value() {
        return errorMap;
    }
}
