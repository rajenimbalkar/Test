from airflow import DAG
from airflow.operators.python_operator import PythonOperator
from airflow.contrib.operators.sftp_operator import SFTPOperator
from datetime import datetime

default_args = {
    'owner': 'airflow',
    'depends_on_past': False,
    'start_date': datetime(2024, 3, 21),
    # Add other default arguments as needed
}

dag = DAG('encrypt_files_dag', default_args=default_args, schedule_interval=None)

# Define the function to encrypt files
def encrypt_files():
    # Import the encryption script and call the function to encrypt files
    from encrypt_files import encrypt_files_in_directory
    directory_to_encrypt = '/tmp'
    encryption_key = b'secretkeysecretke'
    encrypt_files_in_directory(directory_to_encrypt, encryption_key)

# Define the SFTPOperator
sftp_task = SFTPOperator(
    task_id='sftp_task',
    ssh_conn_id='my_ssh_connection',
    local_file='/tmp/myfile.txt',
    remote_file='/path/to/remote/myfile.txt',
    operation='get',
    dag=dag,
)

# Define the PythonOperator to call the encryption function
encryption_task = PythonOperator(
    task_id='encryption_task',
    python_callable=encrypt_files,
    dag=dag,
)

# Set task dependencies
sftp_task >> encryption_task
